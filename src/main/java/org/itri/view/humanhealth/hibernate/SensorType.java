package org.itri.view.humanhealth.hibernate;
// Generated 2020/10/29 �U�� 04:58:12 by Hibernate Tools 4.0.0.Final
import javax.persistence.GeneratedValue;import javax.persistence.SequenceGenerator;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * SensorType generated by hbm2java
 */
@SuppressWarnings("serial")@Entity
@Table(name = "sensor_type")
public class SensorType implements java.io.Serializable {

	private long sensorTypeId;
	private String typeName;
	private String description;
	private Set<Sensor> sensors = new HashSet<Sensor>(0);

	public SensorType() {
	}

	public SensorType(String typeName) {
		this.typeName = typeName;
	}
	
	public SensorType(long sensorTypeId, String typeName, String description) {
		this.sensorTypeId = sensorTypeId;
		this.typeName = typeName;
		this.description = description;
	}

	public SensorType(long sensorTypeId, String typeName, String description, Set<Sensor> sensors) {
		this.sensorTypeId = sensorTypeId;
		this.typeName = typeName;
		this.description = description;
		this.sensors = sensors;
	}

	@SequenceGenerator(name="sensor_type_seq", sequenceName="sensor_type_sensor_type_id_seq")	@GeneratedValue(generator="sensor_type_seq")	@Id

	@Column(name = "sensor_type_id", unique = true, nullable = false)
	public long getSensorTypeId() {
		return this.sensorTypeId;
	}

	public void setSensorTypeId(long sensorTypeId) {
		this.sensorTypeId = sensorTypeId;
	}

	@Column(name = "type_name", nullable = false, length = 64)
	public String getTypeName() {
		return this.typeName;
	}

	public void setTypeName(String typeName) {
		this.typeName = typeName;
	}
	
	@Column(name = "description", length = 64)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sensorType")
	public Set<Sensor> getSensors() {
		return this.sensors;
	}

	public void setSensors(Set<Sensor> sensors) {
		this.sensors = sensors;
	}

}
