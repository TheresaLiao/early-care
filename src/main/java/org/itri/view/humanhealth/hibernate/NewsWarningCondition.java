package org.itri.view.humanhealth.hibernate;
// Generated 2020/10/29 �U�� 04:58:12 by Hibernate Tools 4.0.0.Final
import javax.persistence.GeneratedValue;import javax.persistence.SequenceGenerator;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * NewsWarningCondition generated by hbm2java
 */
@SuppressWarnings("serial")@Entity
@Table(name = "news_warning_condition")
public class NewsWarningCondition implements java.io.Serializable {

	private long newsWarningConditionId;
	private NewsMathOperator newsMathOperator;
	private Patient patient;
	private int newsWarningThreshold;
	private int countBeforeWarning;
	private boolean isDeleted;

	public NewsWarningCondition() {
	}

	public NewsWarningCondition(long newsWarningConditionId, NewsMathOperator newsMathOperator, Patient patient,
			int newsWarningThreshold, int countBeforeWarning, boolean isDeleted) {
		this.newsWarningConditionId = newsWarningConditionId;
		this.newsMathOperator = newsMathOperator;
		this.patient = patient;
		this.newsWarningThreshold = newsWarningThreshold;
		this.countBeforeWarning = countBeforeWarning;
		this.isDeleted = isDeleted;
	}

	@SequenceGenerator(name="news_warning_condition_seq", sequenceName="news_warning_condition_news_warning_condition_id_seq")	@GeneratedValue(generator="news_warning_condition_seq")	@Id

	@Column(name = "news_warning_condition_id", unique = true, nullable = false)
	public long getNewsWarningConditionId() {
		return this.newsWarningConditionId;
	}

	public void setNewsWarningConditionId(long newsWarningConditionId) {
		this.newsWarningConditionId = newsWarningConditionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "news_math_operator_id", nullable = false)
	public NewsMathOperator getNewsMathOperator() {
		return this.newsMathOperator;
	}

	public void setNewsMathOperator(NewsMathOperator newsMathOperator) {
		this.newsMathOperator = newsMathOperator;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "patient_id", nullable = false)
	public Patient getPatient() {
		return this.patient;
	}

	public void setPatient(Patient patient) {
		this.patient = patient;
	}

	@Column(name = "news_warning_threshold", nullable = false)
	public int getNewsWarningThreshold() {
		return this.newsWarningThreshold;
	}

	public void setNewsWarningThreshold(int newsWarningThreshold) {
		this.newsWarningThreshold = newsWarningThreshold;
	}

	@Column(name = "count_before_warning", nullable = false)
	public int getCountBeforeWarning() {
		return this.countBeforeWarning;
	}

	public void setCountBeforeWarning(int countBeforeWarning) {
		this.countBeforeWarning = countBeforeWarning;
	}

	@Column(name = "is_deleted", nullable = false)
	public boolean isIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

}
